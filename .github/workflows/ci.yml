name: Unit Tests

on: [push]

jobs:

  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres  # pragma: allowlist secret
          POSTGRES_DB: indexd
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.0
    - uses: actions/cache@preview
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles(format('{0}{1}', github.workspace, '/poetry.lock')) }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Cleanup
      run: |
        sudo rm -f /etc/boto.cfg
    - name: Setup keys for testing
      run: |
        mkdir -p tests/resources/keys; cd tests/resources/keys; openssl genrsa -out test_private_key.pem 2048; openssl rsa -in test_private_key.pem -pubout -out test_public_key.pem
        openssl genrsa -out test_private_key_2.pem 2048; openssl rsa -in test_private_key_2.pem -pubout -out test_public_key_2.pem
        cd -
    - name: Install dependencies
      run: |
        # curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
        curl -sSL https://install.python-poetry.org | python3 -
        $HOME/.local/bin/poetry install -vvv
        poetry show
    - name: Setup db & test with pytest
      env:
        DB_HOST: 0.0.0.0
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres  # pragma: allowlist secret
      run: |
        PGPASSWORD=$DB_PASSWORD psql --host $DB_HOST --port $DB_PORT -c 'SELECT version();' -U $DB_USER
        PGPASSWORD=$DB_PASSWORD psql --host $DB_HOST --port $DB_PORT -U $DB_USER -c "create database indexd_test_tmp"
        $HOME/.local/bin/poetry run pytest --cov=indexd --cov-report xml
    - name: Submit coverage report
      if: github.ref == 'refs/heads/master'
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        pip install coveralls
        coveralls
